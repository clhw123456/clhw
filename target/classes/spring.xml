<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
      	      http://www.springframework.org/schema/beans/spring-beans.xsd  
              http://www.springframework.org/schema/aop
              http://www.springframework.org/schema/aop/spring-aop.xsd  
              http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context.xsd  
              http://www.springframework.org/schema/tx
              http://www.springframework.org/schema/tx/spring-tx.xsd  
			  http://www.springframework.org/schema/util
			  http://www.springframework.org/schema/util/spring-util.xsd "
	default-lazy-init="false">

    <!--********************************************配置Spring***************************************-->
        <!-- 自动扫描 -->
        <context:component-scan base-package="com.ssh.code.dao,com.ssh.code.service">
        </context:component-scan>


    <!--********************************************配置hibernate********************************************-->

    <!--扫描配置文件(这里指向的是之前配置的那个config.properties)-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="locations">
    		<array>
    			<value>classpath:database.properties</value>
    		</array>
    	</property>
    </bean>

    <!-- 使用annotation定义事务 --><!-- 支持 @Transactional 标记 -->
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/code1?useUnicode=true&amp;characterEncoding=utf-8"></property>
		<property name="user" value="root" />
		<property name="password" value="root" />
		<!-- 设置数据库连接池的最大连接数 -->
		<property name="maxPoolSize">
			<value>50</value>
		</property>
		<!-- 设置数据库连接池的最小连接数 -->
		<property name="minPoolSize">
			<value>5</value>
		</property>
		<!-- 设置数据库连接池的初始化连接数 -->
		<property name="initialPoolSize">
			<value>5</value>
		</property>
		<!-- 设置数据库连接池的连接的最大空闲时间,单位为秒 -->
		<property name="maxIdleTime">
			<value>20</value>
		</property>
		<!--c3p0缓存Statement的数量数 -->
		<property name="maxStatements">
			<value>50</value>
		</property>
		<!-- 当连接池里面的连接用完的时候，C3P0一下获取的新的连接数 -->
		<property name="acquireIncrement">
			<value>20</value>
		</property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="mappingResources">
			<list>
				<value>com/ssh/code/entity/Code.hbm.xml</value>
				<value>com/ssh/code/entity/CodePwd.hbm.xml</value>
				<value>com/ssh/code/entity/Dict.hbm.xml</value>
				<value>com/ssh/code/entity/Orders.hbm.xml</value>
				<value>com/ssh/code/entity/PaperOrder.hbm.xml</value>
				<value>com/ssh/code/entity/Privilege.hbm.xml</value>
				<value>com/ssh/code/entity/Role.hbm.xml</value>
				<value>com/ssh/code/entity/User.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<!-- 解决session关闭问题 -->
				<prop key="hibernate.enable_lazy_load_no_trans">true</prop>
				<!-- <prop key="current_session_context_class">thread</prop> -->
				<!-- 自动创建|更新|验证数据库表结构 validate 加载hibernate时，验证创建数据库表结构 create 每次加载hibernate，重新创建数据库表结构 
					create-drop 加载hibernate时创建，退出是删除表结构 update 加载hibernate自动更新数据库结构 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
			</props>
		</property>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>